//! SeaORM Entity. Generated by sea-orm-codegen 0.5.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "accounts")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub email: String,
    pub name: String,
    pub password: String,
    pub is_active: bool,
    pub fixed_number: Option<String>,
    pub mobile_number: Option<String>,
    pub postal_code: String,
    pub prefecture_code: i16,
    pub address_details: String,
    pub logged_in_at: Option<DateTimeWithTimeZone>,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::prefectures::Entity",
        from = "Column::PrefectureCode",
        to = "super::prefectures::Column::Code",
        on_update = "NoAction",
        on_delete = "Restrict"
    )]
    Prefectures,
    #[sea_orm(has_many = "super::jwt_tokens::Entity")]
    JwtTokens,
}

impl Related<super::prefectures::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Prefectures.def()
    }
}

impl Related<super::jwt_tokens::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::JwtTokens.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
